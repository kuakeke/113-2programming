{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kuakeke/113-2programming/blob/main/2025%E5%B9%B43%E6%9C%8813%E6%97%A5%20%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80%20%E4%BD%9C%E6%A5%AD%E4%B8%80%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "柯昱葶 國文115級 41120122L\n",
        "程式語言 作業一 AI"
      ],
      "metadata": {
        "id": "FzAHtzePPM_a"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "作業要求：\n",
        "1. I/O to GoogleSheet\n",
        "輸入 (Input to GoogleSheet)：將本地數據或 API 資料寫入 Google 試算表\n",
        "輸出 (Output from GoogleSheet)：從 Google 試算表讀取數據並用於分析或顯示\n",
        "成功驗證：能夠成功讀取與寫入 Google 試算表\n",
        "\n",
        "2. 串接 LLM (Gemini, HuggingFace, Ollama)\n",
        "需使用至少一種 LLM（如 Gemini API、Hugging Face API 或 Ollama）\n",
        "透過程式碼呼叫 LLM 並處理回應\n",
        "\n",
        "3. 使用 if、else、for、def\n",
        "需在程式碼中使用至少一種結構：\n",
        "if / else（條件判斷）\n",
        "for（迴圈）\n",
        "def（函式）\n",
        "使用兩個以上結構會加分~\n",
        "\n",
        "4. 提交方式\n",
        "程式碼需放在 GitHub Repo 的 README.md\n",
        "方便助教批改\n",
        "作業可以是資料分析也可以是小遊戲等等，只要符合以上條件即可"
      ],
      "metadata": {
        "id": "5dqgIZM7oCKW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "我的作業發想：\n",
        "\n",
        "\n",
        "\n",
        "1.   讓兩個AI假扮成兩位愛講八卦的台灣女生(用google gemini生成對話)\n",
        "2.   對話要穿插我指定的幾句台灣常用語。(if;else;for;def的使用)\n",
        "3.   對話要穿插我指定的幾句台灣常用語。(if;else;for;def的使用)\n",
        "4.   可以在google試算表為兩個AI角色取名字(output from googlesheet)\n",
        "5.   將對話的故事寫入google試算表\n",
        "\n",
        "遇到的困難：\n",
        "\n",
        "1.   我剛學程式，大部分內容是從chatgpt拉下來的，加上前幾週學到的gemini api、output from googlesheet等等程式的結合，才完成這份作業。\n",
        "2.   因為是chatgpt取下來的，感覺有些程式句子可能可以刪除，但是我其實不一定明白每句程式的功能，所以不太會做刪減。\n",
        "3.   有多次嘗試使用hugging face但一直不成功也找不到原因，所以乾脆放棄，最後用gemini。\n",
        "\n",
        "結語：\n",
        "我用了很多天在處理ai的部分。有些地方嘗試了很久，一直顯示紅色底線。最後看到程式能run出故事，當下心情非常開心。雖然我做的很慢，但看到自己在課上學到的東西被實踐出來，很有成就感。"
      ],
      "metadata": {
        "id": "oNQ2bCZQOyKl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install google-generativeai"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dzrKEaSmjp7g",
        "outputId": "055e7022-7bcc-4617-dbff-f4f98bbb0ba4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: google-generativeai in /usr/local/lib/python3.11/dist-packages (0.8.4)\n",
            "Requirement already satisfied: google-ai-generativelanguage==0.6.15 in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (0.6.15)\n",
            "Requirement already satisfied: google-api-core in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (2.24.2)\n",
            "Requirement already satisfied: google-api-python-client in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (2.160.0)\n",
            "Requirement already satisfied: google-auth>=2.15.0 in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (2.38.0)\n",
            "Requirement already satisfied: protobuf in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (4.25.6)\n",
            "Requirement already satisfied: pydantic in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (2.10.6)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (4.67.1)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.11/dist-packages (from google-generativeai) (4.12.2)\n",
            "Requirement already satisfied: proto-plus<2.0.0dev,>=1.22.3 in /usr/local/lib/python3.11/dist-packages (from google-ai-generativelanguage==0.6.15->google-generativeai) (1.26.1)\n",
            "Requirement already satisfied: googleapis-common-protos<2.0.0,>=1.56.2 in /usr/local/lib/python3.11/dist-packages (from google-api-core->google-generativeai) (1.69.1)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.18.0 in /usr/local/lib/python3.11/dist-packages (from google-api-core->google-generativeai) (2.32.3)\n",
            "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from google-auth>=2.15.0->google-generativeai) (5.5.2)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.11/dist-packages (from google-auth>=2.15.0->google-generativeai) (0.4.1)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.11/dist-packages (from google-auth>=2.15.0->google-generativeai) (4.9)\n",
            "Requirement already satisfied: httplib2<1.dev0,>=0.19.0 in /usr/local/lib/python3.11/dist-packages (from google-api-python-client->google-generativeai) (0.22.0)\n",
            "Requirement already satisfied: google-auth-httplib2<1.0.0,>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from google-api-python-client->google-generativeai) (0.2.0)\n",
            "Requirement already satisfied: uritemplate<5,>=3.0.1 in /usr/local/lib/python3.11/dist-packages (from google-api-python-client->google-generativeai) (4.1.1)\n",
            "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic->google-generativeai) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.27.2 in /usr/local/lib/python3.11/dist-packages (from pydantic->google-generativeai) (2.27.2)\n",
            "Requirement already satisfied: grpcio<2.0dev,>=1.33.2 in /usr/local/lib/python3.11/dist-packages (from google-api-core[grpc]!=2.0.*,!=2.1.*,!=2.10.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,<3.0.0dev,>=1.34.1->google-ai-generativelanguage==0.6.15->google-generativeai) (1.71.0)\n",
            "Requirement already satisfied: grpcio-status<2.0.dev0,>=1.33.2 in /usr/local/lib/python3.11/dist-packages (from google-api-core[grpc]!=2.0.*,!=2.1.*,!=2.10.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,<3.0.0dev,>=1.34.1->google-ai-generativelanguage==0.6.15->google-generativeai) (1.62.3)\n",
            "Requirement already satisfied: pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 in /usr/local/lib/python3.11/dist-packages (from httplib2<1.dev0,>=0.19.0->google-api-python-client->google-generativeai) (3.2.1)\n",
            "Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.11/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=2.15.0->google-generativeai) (0.6.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3.0.0,>=2.18.0->google-api-core->google-generativeai) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3.0.0,>=2.18.0->google-api-core->google-generativeai) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3.0.0,>=2.18.0->google-api-core->google-generativeai) (2.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3.0.0,>=2.18.0->google-api-core->google-generativeai) (2025.1.31)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import auth\n",
        "auth.authenticate_user()\n",
        "\n",
        "import gspread\n",
        "from google.auth import default\n",
        "creds, _ = default()\n",
        "\n",
        "gc = gspread.authorize(creds)\n",
        "\n",
        "import pandas as pd\n",
        "# read data and put it in a dataframe\n",
        "# 在 google 工作表載入 gsheets\n",
        "gsheets = gc.open_by_url('https://docs.google.com/spreadsheets/d/1OfTV9UWUCrs1IK-dijw_hW0Mf03cX35yYDNM9PWw7CE/edit?usp=sharing')\n",
        "\n",
        "from gspread_dataframe import set_with_dataframe\n",
        "\n",
        "# 選擇要更新的工作表\n",
        "worksheet = gsheets.get_worksheet(4)\n",
        "\n",
        "# 讀取 AI 名稱（名字存放在 A1, A2）\n",
        "ai1_name = worksheet.cell(1, 1).value  # 第一個 AI 名稱\n",
        "ai2_name = worksheet.cell(2, 1).value  # 第二個 AI 名稱\n",
        "\n",
        "print(f\"讀取到的 AI 角色名稱：{ai1_name} 和 {ai2_name}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GdYVYU7_1vrs",
        "outputId": "44f29edf-7b75-40a7-a8b4-e85ce4125047"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "讀取到的 AI 角色名稱：小陳 和 小林\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import userdata\n",
        "import random\n",
        "import google.generativeai as genai\n",
        "apikey = userdata.get('GOOGLE_API_KEY')\n",
        "genai.configure(api_key = apikey)\n",
        "model = genai.GenerativeModel(\"gemini-1.5-flash\")\n",
        "\n",
        "# 台灣女生常用語氣詞\n",
        "taiwan_phrases = [\"真的假的啦！\", \"超誇張欸！\", \"我就說吧！\", \"妳不覺得很扯嗎？\", \"蛤？怎麼可能？\"]\n",
        "\n",
        "# 隨機產生開場八卦話題\n",
        "start_topics = [\n",
        "    \"欸妳知道嗎？昨天在學餐，我聽到有人說XXX被抓包劈腿！\",\n",
        "    \"妳記不記得XXX？他最近都超低調，該不會在搞什麼秘密戀愛吧？\",\n",
        "    \"YYY那天IG發了一張照片，感覺根本是曖昧對象拍的，妳覺得呢？\",\n",
        "    \"XXX前幾天突然把某個人的限動全刪了，感覺有大事要發生！\",\n",
        "]\n",
        "\n",
        "used_topics = set()  # 記錄已使用的話題\n",
        "\n",
        "# 使用 Gemini API 讓對話更自然\n",
        "def generate_with_gemini(previous_gossip, ai_name):\n",
        "    \"\"\"讓 AI 生成補充八卦內容\"\"\"\n",
        "    prompt = f\"\"\"{ai_name} 現在正在和朋友八卦，請用台灣年輕女生的語氣回應這段話，並補充一些細節讓八卦更生動：\n",
        "    {previous_gossip}\n",
        "\n",
        "    請記得加入一些台灣年輕女生常用的語氣詞，如：{random.choice(taiwan_phrases)}\n",
        "    整段文章不超過200字\n",
        "    \"\"\"\n",
        "\n",
        "    try:\n",
        "        # 呼叫 Gemini API 生成回應\n",
        "        response = model.generate_content(prompt)\n",
        "        if response and response.text:\n",
        "            return response.text.strip()\n",
        "        else:\n",
        "            return \"欸？我不知道該說什麼了欸...\"\n",
        "    except Exception as e:\n",
        "        return f\"發生錯誤: {str(e)}\"\n",
        "\n",
        "# **從 start_topics 隨機選一個當開場話題**\n",
        "gossip = random.choice(start_topics)\n",
        "used_topics.add(gossip)  # 記錄已使用的話題\n",
        "print(f\"{ai1_name}：{gossip}\")\n",
        "\n",
        "# 進行 4 回合八卦接龍\n",
        "for i in range(4):\n",
        "    # AI 2 生成回應\n",
        "    gossip = generate_with_gemini(gossip, ai2_name)\n",
        "    print(f\"{ai2_name}：{gossip}\\n\")\n",
        "    # **如果還有未使用的 start_topics，就隨機選一個，否則直接延續對話**\n",
        "    remaining_topics = list(set(start_topics) - used_topics)\n",
        "    if remaining_topics:\n",
        "        new_topic = random.choice(remaining_topics)\n",
        "        used_topics.add(new_topic)\n",
        "        gossip = gossip + \" \" + new_topic  # 接續新話題\n",
        "\n",
        "    # AI 1 生成回應\n",
        "    gossip = generate_with_gemini(gossip, ai1_name)\n",
        "    print(f\"{ai1_name}：{gossip}\\n\")\n",
        "\n",
        "    # **如果還有未使用的 start_topics，就隨機選一個，否則直接延續對話**\n",
        "    remaining_topics = list(set(start_topics) - used_topics)\n",
        "    if remaining_topics:\n",
        "        new_topic = random.choice(remaining_topics)\n",
        "        used_topics.add(new_topic)\n",
        "        gossip = gossip + \" \" + new_topic  # 接續新話題"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 974
        },
        "id": "CbU4hRQO5NYJ",
        "outputId": "8e24a8ad-e613-4a38-961d-89855625b709"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "小陳：欸妳知道嗎？昨天在學餐，我聽到有人說XXX被抓包劈腿！\n",
            "小林：真的假的啦？！XXX？！那個XXX喔？天啊！妳是說在學餐？！  我昨天也在學餐欸，怎麼沒看到？！是怎樣，被抓包現場嗎？是跟誰啊？  是那個…之前一直跟他曖昧的…那個學長嗎？！  OMG，妳不覺得很扯嗎？  聽說好像是被女朋友抓到跟那個學長在廁所擁抱？！  還有照片證據欸！  超瞎的啦！  然後那個女朋友整個崩潰大哭，超慘的！  到底發生什麼事啊？  快跟我說細節啦！  他們兩個之前看起來明明超恩愛的耶！  這世界到底怎麼了啦！\n",
            "\n",
            "小陳：真的假的啦？！XXX？！那個XXX喔？天啊！妳說在學餐？！  我昨天也在學餐欸！怎麼可能沒看到啦！是怎樣啦，真的被抓包現場？！跟誰啊？  是那個…之前一直跟他曖昧的…那個系草學長嗎？！  OMG，真的假的啦！  聽說是被正宮抓到在女廁擁抱？！  還有照片證據欸！  超扯的啦！  那個女朋友哭到妝都花了，超慘的！  \n",
            "\n",
            "細節是這樣啦…聽說他們躲在那個最裡面沒人的小隔間，結果正宮直接衝進去！  然後那個學長還想裝傻，超好笑的！  XXX前幾天突然把那個正宮的限動全刪了，我猜一定是分手了！  欸欸欸，妳知道嗎？聽說他們兩個之前還一起去看電影耶，超恩愛的樣子，結果…  這世界到底怎麼了啦！  難怪最近XXX看起來怪怪的！\n",
            "\n",
            "小林：真的假的啦！XXX？！那個XXX喔？天啊！學餐？！我昨天也在學餐欸！怎麼可能沒看到啦！到底發生什麼事啦！被抓包現場+1？！跟誰啊？是那個…之前一直跟他曖昧的…系草學長？！OMG，真的假的啦！\n",
            "\n",
            "聽說是被正宮抓到在女廁最裡面那個小隔間擁抱？！還有照片證據？！超扯的啦！正宮哭到妝都花了，超慘的！  學長還想裝傻？！笑死！  XXX前幾天真的把正宮限動全刪了耶！一定是分手了啦！  他們之前還一起去看《灌籃高手》欸，超恩愛的！結果…這世界到底怎麼了啦！\n",
            "\n",
            "難怪最近XXX看起來怪怪的！對吼！妳說XXX喔，他最近超低調的，該不會也…偷偷交男友了吧？！  \n",
            "啊～八卦真是太精彩了啦！\n",
            "\n",
            "小陳：真的假的啦！XXX？！那個XXX喔？天啊！學餐？！我昨天也在學餐欸！怎麼可能沒看到啦！到底發生什麼事啦！被抓包現場+1？！跟誰啊？是那個…之前一直跟他曖昧的…系草學長？！OMG，真的假的啦！\n",
            "\n",
            "聽說是被正宮抓到在女廁最裡面那個小隔間擁抱？！還有照片證據？！超扯的啦！超誇張欸！正宮哭到妝都花了，睫毛膏都暈開了，超慘的！學長還想裝傻？！笑死！  XXX前幾天真的把正宮限動全刪了耶！一定是分手了啦！他們之前還一起去看《灌籃高手》欸，電影票根還po限動炫耀，結果…這世界到底怎麼了啦！  \n",
            "\n",
            "難怪最近XXX看起來怪怪的，都戴口罩、帽子把自己包緊緊的！對吼！妳說XXX喔，他最近超低調的，該不會也…偷偷交男友了吧？！  是那個美術系的嗎？我朋友好像有看到他們一起吃鹹酥雞！\n",
            "\n",
            "啊～八卦真是太精彩了啦！ YYY那天IG發的那張照片，是從下面仰拍，光線超好，感覺根本是曖昧對象拍的啦！  那個角度…懂的都懂啦！（眨眼）\n",
            "\n",
            "小林：真的假的啦！XXX？！那個XXX喔？天啊！學餐？！我昨天也在學餐欸！怎麼可能沒看到啦！到底發生什麼事啦！被抓包現場+1？！跟誰啊？是那個…之前一直跟他曖昧的…系草學長？！OMG，真的假的啦！\n",
            "\n",
            "聽說是被正宮抓到在女廁最裡面那個小隔間擁抱？！還有照片證據？！超扯的啦！超誇張欸！正宮哭到妝都花了，睫毛膏都暈開了，像個小丑一樣！學長還想裝傻？！笑死！  XXX前幾天真的把正宮限動全刪了耶！一定是分手了啦！他們之前還一起去看《灌籃高手》欸，電影票根還po限動炫耀，結果…這世界到底怎麼了啦！妳不覺得很扯嗎？\n",
            "\n",
            "難怪最近XXX看起來怪怪的，都戴口罩、帽子把自己包緊緊的！對吼！妳說XXX喔，他最近超低調的，該不會也…偷偷交男友了吧？！是那個美術系的？！我朋友說好像還一起牽手去看電影耶！超閃的啦！\n",
            "\n",
            "啊～八卦真是太精彩了啦！ YYY那天IG發的那張照片，是從下面仰拍，光線超好，根本就是男友視角啊！那個角度…懂的都懂啦！（眨眼）\n",
            "\n",
            "小陳：真的假的啦！XXX？！那個XXX喔？天啊！學餐？！我昨天也在學餐欸！怎麼可能沒看到啦！到底發生什麼事啦！被抓包現場+1？！跟誰啊？是那個…之前一直跟他曖昧的…系草學長？！OMG，真的假的啦！\n",
            "\n",
            "我就說吧！聽說是被正宮抓到在女廁最裡面那個小隔間喇舌？！  還有照片證據？！超扯的啦！超誇張欸！正宮哭到妝都花了，睫毛膏都暈開了，整個像小花貓一樣！學長還想裝傻？！笑死！  XXX前幾天真的把正宮限動全刪了耶！一定是分手了啦！他們之前還一起去看《灌籃高手》欸，電影票根還po限動閃瞎眾人，結果…真的太扯了啦！\n",
            "\n",
            "難怪最近XXX看起來怪怪的，都戴口罩、帽子把自己包緊緊的！對吼！妳說XXX喔，他最近超低調的，該不會也…偷偷交男友了吧？！是那個美術系的？！我朋友說好像還一起牽手去看《關於我和鬼變成家人的那件事》耶！超閃的啦！\n",
            "\n",
            "啊～八卦真是太精彩了啦！YYY那天IG發的那張照片，是從下面仰拍，光線超好，根本就是男友視角啊！那個角度…懂的都懂啦！（眨眼）\n",
            "\n",
            "小林：真的假的啦！XXX？！那個XXX喔？天啊！學餐？！我昨天也在學餐欸！怎麼可能沒看到啦？！到底發生什麼事啦！被抓包現場+1？！跟誰啊？是那個…之前一直跟他曖昧的…系草學長？！OMG，真的假的啦！\n",
            "\n",
            "學餐女廁最裡面那個小隔間？！還有照片？！妳不覺得超扯嗎？！正宮哭到妝都花了，睫毛膏暈開，超像小花貓的啦！學長還想裝傻？！笑死！前幾天還一起去看《灌籃高手》耶，電影票根還PO限動閃瞎一堆人，結果…分手了？！\n",
            "\n",
            "難怪最近XXX看起來怪怪的，都戴口罩帽子把自己包緊緊的！對吼！妳說XXX喔，他最近超低調的，該不會也…偷偷交男友了吧？！美術系的？！我朋友說好像還一起牽手去看《關於我和鬼變成家人的那件事》欸！超閃的啦！\n",
            "\n",
            "YYY那天IG那張照片，妳有看到嗎？從下面仰拍，光線超好，根本男友視角啊！那個角度…懂的都懂啦！（眨眼）  啊～八卦真是太精彩了啦！\n",
            "\n",
            "小陳：真的假的啦！XXX？！那個XXX喔？天啊！學餐？！我昨天也在學餐欸！怎麼可能沒看到啦？！到底發生什麼事啦！被抓包現場+1？！跟誰啊？是那個…之前一直跟他曖昧的…系草學長？！OMG，真的假的啦！\n",
            "\n",
            "學餐女廁最裡面那個小隔間？！還有照片？！超扯的啦！我就說吧！正宮哭到妝都花了，睫毛膏暈開，超像小花貓的！學長還想裝傻？！笑死！前幾天還一起去看《灌籃高手》耶，還PO限動閃瞎一堆人，結果…分手了？！  \n",
            "\n",
            "難怪最近XXX看起來怪怪的，都戴口罩帽子把自己包緊緊的！對吼！妳說XXX喔，他最近超低調的，該不會也…偷偷交男友了吧？！美術系的？！我朋友說好像還一起牽手去看《關於我和鬼變成家人的那件事》欸！超閃的啦！\n",
            "\n",
            "YYY那天IG那張照片，妳有看到嗎？從下面仰拍，光線超好，根本男友視角啊！那個角度…懂的都懂啦！（眨眼）  啊～八卦真是太精彩了啦！\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from gspread_dataframe import set_with_dataframe\n",
        "\n",
        "# 選擇要更新的工作表\n",
        "worksheet = gsheets.get_worksheet(5)\n",
        "\n",
        "# 將 DataFrame 寫入 Google Sheets\n",
        "set_with_dataframe(worksheet, pd.DataFrame([gossip]))\n"
      ],
      "metadata": {
        "id": "GJj5e0oW80VZ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}